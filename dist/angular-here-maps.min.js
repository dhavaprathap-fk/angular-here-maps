"use strict";angular.module("angular-here-maps",[]),angular.module("angular-here-maps").directive("map",function(MapConfig,$document,$compile){return{template:'<div class="here-map"><div ng-transclude></div></div>',restrict:"EA",transclude:!0,replace:!0,controller:function($scope,$element,$attrs){var defaultLayers,modules,ui,behavior,marker,markerWindow;$scope.zoom=$scope.helpers.useDotNotation($scope,$attrs.zoom),$scope.center=$scope.helpers.useDotNotation($scope,$attrs.center),MapConfig.libraries()&&(modules=MapConfig.libraries().split(",")),$scope.refreshMarkers=function(){var allIcons=[],templateMarkers=$document.find("template-marker"),mapIcons=$document.find("marker-icon");allIcons.push(templateMarkers,mapIcons),_.each(allIcons,function(mapIcon){$compile(mapIcon)($scope)}),$scope.$apply()};var platform=new H.service.Platform({app_id:MapConfig.appId(),app_code:MapConfig.appCode()});defaultLayers=platform.createDefaultLayers(512,MapConfig.pixelPerInch()),this.map=new H.Map($element[0],defaultLayers.normal.map,{pixelRatio:MapConfig.pixelRatio()}),this.ui=H.ui.UI.createDefault(this.map,defaultLayers),$scope.zoom&&this.map.setZoom($scope.zoom),$scope.center&&this.map.setCenter($scope.center),window.addEventListener("resize",function(){this.map.getViewPort().resize()}.bind(this)),_.each(modules,function(module){"ui"===module&&(ui=H.ui.UI.createDefault(this.map,defaultLayers)),"pano"===module&&platform.configure(H.map.render.panorama.RenderEngine),"mapevents"===module&&(behavior=new H.mapevents.Behavior(new H.mapevents.MapEvents(this.map)))}.bind(this));var createMapMarker=function(coordinates,icon,id){var markerTemplate;if(icon){markerTemplate=icon.templateUrl?"<template-marker ng-cloak id="+id+" templateurl="+icon.templateUrl+"></template-marker>":"<marker-icon id="+id+">"+icon.template+"</marker-icon>";var markerIcon=new H.map.DomIcon(markerTemplate);marker=new H.map.DomMarker(coordinates,{icon:markerIcon})}else marker=new H.map.Marker(coordinates)},createMarkerEvents=function(windowTemplate,group,coordinates,events){$scope.removeBubble=function(){markerWindow.close()},group.addEventListener("tap",function(){events&&events.tap(coordinates),markerWindow&&this.ui.removeBubble(markerWindow);var newTemplate=windowTemplate;newTemplate=$compile(newTemplate)($scope),$scope.$apply(),windowTemplate&&(markerWindow=new H.ui.InfoBubble(coordinates,{content:newTemplate[0]}),this.ui.addBubble(markerWindow))}.bind(this,coordinates),!1)}.bind(this),createMarkerWindows=function(group,coordinates,icon){var events,windowTemplate;icon&&icon.events&&(events=icon.events),icon&&icon.window&&(windowTemplate=icon.window.templateUrl?"<template-window templateurl="+icon.window.templateUrl+"></template-window>":"<marker-window>"+icon.window.template+"</marker-window>",(icon.window.template||icon.window.templateUrl)&&createMarkerEvents(windowTemplate,group,coordinates,events))},getCurrentIcon=function(defaultIcon,currentIcon){var icon=defaultIcon;return currentIcon&&((currentIcon.template||currentIcon.templateUrl)&&(icon=currentIcon),currentIcon.window&&(icon.window=currentIcon.window)),icon};this.addMarkerToMap=function(coordinates,defaultIcon,currentIcon,id){var group=new H.map.Group,icon=getCurrentIcon(defaultIcon,currentIcon);createMapMarker(coordinates,icon,id),createMarkerWindows(group,coordinates,icon),this.map.addObject(group),group.addObject(marker)},this.map.addEventListener("mapviewchangeend",function(){$scope.refreshMarkers()})}}}),angular.module("angular-here-maps").directive("markerIcon",function(){return{scope:!0,link:function(scope,element,attrs){scope.id=attrs.id}}}),angular.module("angular-here-maps").directive("marker",function(){return{require:"^map",scope:{coordinates:"=",icon:"="},restrict:"E",link:function(scope,element,attrs,mapController){var addMarker=function(){scope.coordinates&&mapController.addMarkerToMap(scope.coordinates,scope.icon)};scope.$watch("coordinates",function(){addMarker()})}}}),angular.module("angular-here-maps").directive("markers",function(){return{restrict:"E",require:"^map",scope:{locations:"=",icon:"="},link:function(scope,element,attrs,mapController){_.each(scope.locations,function(location){mapController.addMarkerToMap(location.coordinates,scope.icon,location.icon,location.id)})}}}),angular.module("angular-here-maps").directive("templateMarker",function(){return{scope:!0,link:function(scope,element,attrs){scope.id=attrs.id},templateUrl:function(tElement,tAttrs){return tAttrs.templateurl}}}),angular.module("angular-here-maps").directive("templateWindow",function(){return{templateUrl:function(tElement,tAttrs){return tAttrs.templateurl}}}),angular.module("angular-here-maps").run(function($rootScope){$rootScope.helpers={useDotNotation:function(object,path){path=String(path).split(".");for(var i=0;i<path.length;i++)object=object[path[i]];return object}}}),angular.module("angular-here-maps").provider("MapConfig",function(){this.mapOptions={},this.$get=function(){var mapOptions=this.mapOptions;return{appId:function(appId){return mapOptions.appId||appId},appCode:function(appCode){return mapOptions.appCode||appCode},pixelRatio:function(ratio){return mapOptions.pixelRatio||ratio},pixelPerInch:function(pixel){return mapOptions.pixelPerInch||pixel},libraries:function(libraries){return mapOptions.libraries||libraries}}},this.setOptions=function(options){this.mapOptions=options}});